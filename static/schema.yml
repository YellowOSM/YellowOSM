components:
  schemas:
    Geo58-Short:
      properties:
        geo58:
          type: string
      type: object
    POI:
      properties:
        addr_city:
          type: string
        addr_country:
          type: string
        addr_housenumber:
          type: string
        addr_postcode:
          type: string
        addr_street:
          type: string
        address:
          type: string
        amenity:
          type: string
        contact_email:
          type: string
        location:
          $ref: '#/components/schemas/coordinates'
        name:
          type: string
        opening_hours:
          type: string
        osmid:
          format: int32
          type: integer
        phone:
          type: string
        shop:
          type: string
        website:
          type: string
      type: object
    XYCoordinates:
      properties:
        x:
          format: float
          type: number
        y:
          format: float
          type: number
        zoom:
          format: float
          type: number
      type: object
    coordinates:
      properties:
        lat:
          format: float
          type: number
        lon:
          format: float
          type: number
      type: object
info:
  contact:
    name: YellowOSM
    url: https://yellowosm.com/#contact
  license:
    name: GNU AGPL v3.0
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  title: Web Service
  version: '1.0'
openapi: 3.0.2
paths:
  /api/coords_to_geo58/{zoom}/{x}/{y}:
    get:
      description: legacy function use /api/geo58/{zoom}/{x}/{y} instead
      summary: legacy function use /api/geo58/{zoom}/{x}/{y} instead
  /api/geo58/{zoom}/{x}/{y}:
    get:
      description: convert coordinates `z`/`x`/`y` to Geo58 short-string.
      parameters:
      - description: latitude from -90 to 90
        example: 47.07424
        in: path
        name: x
        required: true
        schema:
          type: number
      - description: longitude from -180 to 180
        example: 15.43258
        in: path
        name: y
        required: true
        schema:
          type: number
      - description: 'zoom level to be encoded in Geo58 String. must be between 5
          and 20.

          '
        example: 20
        in: path
        name: zoom
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Geo58-Short'
          description: get corresponding Geo58 short-string
        '406':
          description: coordinates invalid.
      summary: get Geo58 short-string
  /api/geo58_to_coords/{geo58_str}:
    get:
      description: legacy function use "/api/geo58/{geo58_str}" instead
      summary: legacy function use "/api/geo58/{geo58_str}" instead
  /api/geo58/{geo58_str}:
    get:
      description: convert Geo58 short-string to coordinates `z`/`x`/`y`.
      parameters:
      - example: 4dHEj1AKm
        in: path
        name: geo58_str
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XYCoordinates'
          description: get corresponding coordinates `z`/`x`/`y`.
        '400':
          description: invalid Geo58 short-code.
      summary: get coordinates `z`/`x`/`y`
  /api/redirect_geo58/: {}
  /api/redirect_geo58/{geo58_str}:
    get:
      description: redirects to YellowOSM map with given short-string. this will resolve
        the short-string and redirect to coordinates (`z`/`x`/`y`).
      parameters:
      - example: 4dHEj1AKm
        in: path
        name: geo58_str
        required: true
        schema:
          type: string
      responses:
        '302':
          description: redirect
        '400':
          description: invalid short code
      summary: redirect to YellowOSM map
  /api/get_vcard/{osm_id}:
    get:
      description: legacy function use "/api/osmid/{osm_id}.vcard" instead
      summary: legacy function use "/api/osmid/{osm_id}.vcard" instead
  /api/osmid/{osm_id}.vcard:
    get:
      description: returns a vcard for the given `osm_id`
      parameters:
      - description: osmID, same as on OpenStreetMap.
        example: 317335810
        in: path
        name: osm_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            text/vcard:
              schema:
                $ref: '#/components/schemas/POI'
          description: OK
        '404':
          description: osm_id not found
        '504':
          description: could not connect to database
      summary: get vcard
  /api/get_json/{osm_id}:
    get:
      description: legacy function use "/api/osmid/{osm_id}" instead
      summary: legacy function use "/api/osmid/{osm_id}" instead
  /api/osmid/{osm_id}:
    get:
      description: returns info for the given `osm_id`
      parameters:
      - description: osmID, same as on OpenStreetMap.
        example: 317335810
        in: path
        name: osm_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/POI'
          description: OK
        '404':
          description: osm_id not found
        '504':
          description: could not connect to database
      summary: get osm_id info
  /api/forward_ip: {}
  /api/search/{query}:
    get:
      description: Get POIs that match `query`
      parameters:
      - example: Scherbe Graz
        in: path
        name: query
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/POI'
          description: POIs returned.
      summary: get search results
  /api/search/{city}/{query}:
    get:
      description: Get POIs that match `query`
      parameters:
      - example: Weikhard
        in: path
        name: query
        required: true
        schema:
          type: string
      - description: limit search to 'city'
        example: Graz
        in: path
        name: city
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/POI'
          description: POIs returned.
      summary: get search results
  /api/search/{city}/{query}/{limit}:
    get:
      description: 'Get POIs that match `query`. search is limited to ''limit'' number
        of results.

        '
      parameters:
      - example: Sacher
        in: path
        name: query
        required: true
        schema:
          type: string
      - description: limit search to 'city'
        example: Wien
        in: path
        name: city
        required: true
        schema:
          type: string
      - description: limit number of results to 'limit'
        example: 10
        in: path
        name: limit
        required: true
        schema:
          type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/POI'
          description: POIs returned.
      summary: get search results
  /api/search/{top_left_lat}/{top_left_lon}/{bottom_right_lat}/{bottom_right_lon}/{query}:
    get:
      description: 'Get POIs that match `query`. search is limited to bounding-box
        coordinates.

        '
      parameters:
      - example: Tribeka
        in: path
        name: query
        required: true
        schema:
          type: string
      - description: top left latitude of bounding-box
        example: 47.09086
        in: path
        name: top_left_lat
        required: true
        schema:
          type: number
      - description: top left longitude of bounding-box
        example: 15.39598
        in: path
        name: top_left_lon
        required: true
        schema:
          type: number
      - description: bottom right latitude of bounding-box
        example: 47.03602
        in: path
        name: bottom_right_lat
        required: true
        schema:
          type: number
      - description: bottom right longitude of bounding-box
        example: 15.48806
        in: path
        name: bottom_right_lon
        required: true
        schema:
          type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/POI'
          description: POIs returned.
      summary: get search results
