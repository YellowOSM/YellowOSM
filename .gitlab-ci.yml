stages:
  - build
  - deploy

build_frontend:
  stage: build
  image: node:latest
  script:
    - npm install -g @angular/cli
    - npm --version
    - ng --version
    - echo 'hello world'
    - ls -a
    - cd frontend
    - npm install
    - egrep -lRZe '%YOSM-COMMIT%' src/environments/environment*.ts | xargs -0 -l sed -i -e "s/%YOSM-COMMIT%/${CI_COMMIT_SHA:0:8}/g"
    - mv src/environments/environment.test.ts src/environments/environment.prod.ts
    # - ng build --configuration test --base-href /map/
    - ng build --prod --base-href /map/
    - ls -R dist
    - cd dist
  artifacts:
    paths:
      - frontend/dist/
    expire_in: 2 weeks
  only:
    refs:
      - master
    changes:
      - frontend/**/*
  environment:
    name: dev
    url: https://dev.yosm.at

build_frontend_prod:
  stage: build
  image: node:latest
  script:
    - npm install -g @angular/cli
    - npm --version
    - ng --version
    - echo 'hello world'
    - ls -a
    - cd frontend
    - npm install
    - egrep -lRZe '%YOSM-COMMIT%' src/environments/environment*.ts | xargs -0 -l sed -i -e "s/%YOSM-COMMIT%/${CI_COMMIT_SHA:0:8}/g"
    - ng build --prod --base-href /map/
    - ls -R dist
    - cd dist
  artifacts:
    paths:
      - frontend/dist/
    expire_in: 2 weeks
  only:
    refs:
      - production
    changes:
      - frontend/**/*
  environment:
    name: prod
    url: https://www.yellowosm.com

deploy_backend:
  stage: deploy
  image: python:3.7-stretch
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    ## DON'T use protected variables for this!!
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ping -c 1 toddvm5.klienux.at
    - ls -lha
    - 'which rsync || ( apt-get update -y && apt-get install rsync -y )'
  script:
    - ls -R backend
    - cd backend/
    - ssh root@toddvm5.klienux.at 'cd docker-compose/responder/; mv Dockerfile docker-compose.yml ../ 2> /dev/null;'
    - echo -e $BACKEND_ENV_DEV > .env
    - rsync -azvh --progress --delete * .* root@toddvm5.klienux.at:docker-compose/responder/
    - ssh root@toddvm5.klienux.at 'cd docker-compose/responder/; mv ../Dockerfile ../docker-compose.yml . ;'
    - ssh root@toddvm5.klienux.at 'cd docker-compose/responder/; docker-compose build yosm-backend; docker-compose up --detach yosm-backend;'
    - ssh root@toddvm5.klienux.at cat yellowosm_success.txt
  only:
    refs:
      - master
    changes:
      - backend/**/*
  environment:
    name: dev
    url: https://dev.yosm.at

deploy_frontend:
  stage: deploy
  image: node:latest
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    ## DON'T use protected variables for this!!
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ping -c 1 toddvm5.klienux.at
    - ls -lha
  script:
    - >2
      echo -e "User-agent: *
      \nDisallow: /" > static/robots.txt
    - ssh root@toddvm5.klienux.at 'mkdir -p /srv/html_new'
    - scp -r static/* root@toddvm5.klienux.at:/srv/html_new/
    - ls -R frontend/dist
    - cd frontend/
    - scp -r dist/frontend root@toddvm5.klienux.at:/srv/html_new/map
    - ssh root@toddvm5.klienux.at 'mv /srv/html /srv/html_old; mv /srv/html_new /srv/html; rm -r /srv/html_old'
    - ssh root@toddvm5.klienux.at cat yellowosm_success.txt
  only:
    refs:
      - master
    changes:
      - frontend/**/*
  environment:
    name: dev
    url: https://dev.yosm.at

deploy_static_page:
  stage: deploy
  image: node:latest
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    ## DON'T use protected variables for this!!
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ping -c 1 toddvm5.klienux.at
    - ls -lha
  script:
    - >2
      echo -e "User-agent: *
      \nDisallow: /" > static/robots.txt
    - ssh root@toddvm5.klienux.at 'mkdir -p /srv/html/'
    - scp -r static/* root@toddvm5.klienux.at:/srv/html/
    - ssh root@toddvm5.klienux.at cat yellowosm_success.txt
  only:
    refs:
      - master
    changes:
      - static/**/*
  environment:
    name: dev
    url: https://dev.yosm.at


##################### Production ##############################

deploy_prod_backend:
  stage: deploy
  image: python:3.7-stretch
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    ## DON'T use protected variables for this!!
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ping -c 1 toddvm5.klienux.at
    - ls -lha
    - 'which rsync || ( apt-get update -y && apt-get install rsync -y )'
  script:
    - ls -R backend
    - cd backend/
    - ssh root@toddvm5.klienux.at 'cd docker-compose/responder_prod/; mv Dockerfile docker-compose.yml ../ 2> /dev/null;'
    - echo -e $BACKEND_ENV_PROD > .env
    - rsync -azvh --progress --delete * .* root@toddvm5.klienux.at:docker-compose/responder_prod/
    - ssh root@toddvm5.klienux.at 'cd docker-compose/responder_prod/; mv ../Dockerfile ../docker-compose.yml . ;'
    - ssh root@toddvm5.klienux.at 'cd docker-compose/responder_prod/; docker-compose build yosm-prod-backend; docker-compose up --detach yosm-prod-backend;'
    - ssh root@toddvm5.klienux.at cat yellowosm_success.txt
  only:
    - production
  environment:
    name: prod
    url: https://www.yellowosm.com

deploy_prod_frontend:
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    ## DON'T use protected variables for this!!
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ping -c 1 toddvm5.klienux.at
    - ls -lha

  stage: deploy
  image: node:latest
  script:
    - ssh root@toddvm5.klienux.at 'mkdir -p /srv/html_prod_new'
    - scp -r static/* root@toddvm5.klienux.at:/srv/html_prod_new/
    - ls -R frontend/dist
    - cd frontend/
    - scp -r dist/frontend root@toddvm5.klienux.at:/srv/html_prod_new/map
    - ssh root@toddvm5.klienux.at 'mv /srv/html_prod /srv/html_prod_old; mv /srv/html_prod_new /srv/html_prod; rm -r /srv/html_prod_old'
    - ssh root@toddvm5.klienux.at cat yellowosm_success.txt
  only:
    - production
  environment:
    name: prod
    url: https://www.yellowosm.com
